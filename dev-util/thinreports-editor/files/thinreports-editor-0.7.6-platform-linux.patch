Index: thinreports-editor-org/application/platform/platform.pri
===================================================================
--- thinreports-editor-org.orig/application/platform/platform.pri
+++ thinreports-editor-org/application/platform/platform.pri
@@ -51,52 +51,61 @@ defineTest(qtcAddDeployment) {
         copyCommand =
         for(deploymentfolder, DEPLOYMENTFOLDERS) {
             source = $$MAINPROFILEPWD/$$eval($${deploymentfolder}.source)
-            target = $$OUT_PWD
-            !isEqual(source, $$target) {
+            source = $$replace(source, \\\\, /)
+            macx {
+                target = $$OUT_PWD/$${TARGET}.app/Contents/Resources/$$eval($${deploymentfolder}.target)
+            } else {
+                target = $$OUT_PWD/$$eval($${deploymentfolder}.target)
+            }
+            target = $$replace(target, \\\\, /)
+            sourcePathSegments = $$split(source, /)
+            targetFullPath = $$target/$$last(sourcePathSegments)
+            !isEqual(source,$$targetFullPath) {
                 !isEmpty(copyCommand):copyCommand += &&
                 copyCommand += $(MKDIR) \"$$target\"
                 copyCommand += && $(COPY_DIR) \"$$source\" \"$$target\"
             }
         }
-    }
+        !isEmpty(copyCommand) {
+            copyCommand = @echo Copying application data... && $$copyCommand
+            copydeploymentfolders.commands = $$copyCommand
+            first.depends = $(first) copydeploymentfolders
+            export(first.depends)
+            export(copydeploymentfolders.commands)
+            QMAKE_EXTRA_TARGETS += first copydeploymentfolders
+        }
+        installPrefix = /opt/$${TARGET}
+        for(deploymentfolder, DEPLOYMENTFOLDERS) {
+            item = item$${deploymentfolder}
+            itemfiles = $${item}.files
+            $$itemfiles = $$eval($${deploymentfolder}.source)
+            itempath = $${item}.path
+            $$itempath = $${installPrefix}/$$eval($${deploymentfolder}.target)
+            export($$itemfiles)
+            export($$itempath)
+            INSTALLS += $$item
+        }
+    
+        !isEmpty(desktopfile.path) {
+            export(icon.files)
+            export(icon.path)
+            export(desktopfile.files)
+            export(desktopfile.path)
+            INSTALLS += icon desktopfile
+        }
+    
+        target.path = $${installPrefix}/bin
+        export(target.path)
+        INSTALLS += target
 
-    !isEmpty(copyCommand) {
-        copyCommand = @echo Copying application data... && $$copyCommand
-        copydeploymentfolders.commands = $$copyCommand
-        first.depends = $(first) copydeploymentfolders
-        export(first.depends)
-        export(copydeploymentfolders.commands)
-        QMAKE_EXTRA_TARGETS += first copydeploymentfolders
     }
 
+    export (ICON)
+    export (INSTALLS)
+    export (DEPLOYMENT)
+    export (TARGET.EPOCHEAPSIZE)
+    export (TARGET.CAPABILITY)
+    export (LIBS)
     export (QMAKE_EXTRA_TARGETS)
 
-# (TODO) The following codes are necessary?
-#----------------------------------------------
-#        installPrefix = /opt/$${TARGET}
-#        for(deploymentfolder, DEPLOYMENTFOLDERS) {
-#            item = item$${deploymentfolder}
-#            itemfiles = $${item}.files
-#            $$itemfiles = $$eval($${deploymentfolder}.source)
-#            itempath = $${item}.path
-#            $$itempath = $${installPrefix}/$$eval($${deploymentfolder}.target)
-#            export($$itemfiles)
-#            export($$itempath)
-#            INSTALLS += $$item
-#        }
-#        !isEmpty(desktopfile.path) {
-#            export(icon.files)
-#            export(icon.path)
-#            export(desktopfile.files)
-#            export(desktopfile.path)
-#            INSTALLS += icon desktopfile
-#        }
-#        target.path = $${installPrefix}/bin
-#        export(target.path)
-#        INSTALLS += target
-#    }
-#    export (ICON)
-#    export (INSTALLS)
-#    export (DEPLOYMENT)
-#    export (LIBS)
-}
+}
\ No newline at end of file
